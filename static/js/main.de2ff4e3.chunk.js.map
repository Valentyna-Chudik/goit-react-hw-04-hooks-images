{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Section/Section.module.css","components/Searchbar/Searchbar.module.css","components/Container/Container.js","services/images-api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Section/Section.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/GalleryView/GalleryView.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","api","fetchImages","query","currentPage","axios","get","then","data","hits","ImageGalleryItem","webformatURL","largeImageURL","alt","onClick","imageGalleryItem","src","data-source","imageGalleryItemImage","ImageGallery","images","imageGallery","map","id","tags","Button","onLoadMore","type","button","LoaderSpinner","loader","color","height","width","timeout","Section","section","Searchbar","onSubmit","useState","setQuery","searchbar","searchForm","e","preventDefault","trim","toast","warning","searchFormButton","searchFormButtonLabel","searchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","modalRoot","document","querySelector","Modal","largeImgURL","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","overlay","target","modal","GalleryView","setImages","setCurrentPage","isLoading","setIsLoading","showModal","setShowModal","setLargeImageURL","setAlt","options","imagesApi","prevImages","length","error","catch","finally","searchImages","scrollPage","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","toggleModal","shouldRenderLoadMoreBtn","newQuery","dataset","source","App","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de2ff4e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__1F3B3\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__2JZXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__16oDY\",\"modal\":\"Modal_modal__3v6eV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__378Xj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__xiqkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__31AXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1AGbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Osah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__aHhRm\",\"searchForm\":\"Searchbar_searchForm___nLxT\",\"searchFormButton\":\"Searchbar_searchFormButton__3Ll_D\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__3iPiS\",\"searchFormInput\":\"Searchbar_searchFormInput__1YX9m\"};","import PropTypes from 'prop-types';\n\nimport styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = '19042677-37d14c32a93614679ae39c658';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nconst fetchImages = ({ query = '', currentPage = 1 }) => {\n  return axios\n    .get(\n      `${BASE_URL}?q=${query}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(({ data }) => data.hits);\n};\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","import PropTypes from 'prop-types';\n\nimport styles from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  webformatURL,\n  largeImageURL,\n  alt,\n  onClick,\n}) {\n  return (\n    <li className={styles.imageGalleryItem}>\n      <img\n        src={webformatURL}\n        data-source={largeImageURL}\n        alt={alt}\n        onClick={onClick}\n        className={styles.imageGalleryItemImage}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport styles from './ImageGallery.module.css';\n\nexport default function ImageGallery({ images, onClick }) {\n  return (\n    <ul className={styles.imageGallery}>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          alt={tags}\n          onClick={onClick}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  onClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nexport default function Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" className={styles.button} onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\n\nimport styles from './Loader.module.css';\n\nexport default function LoaderSpinner() {\n  return (\n    <Loader\n      className={styles.loader}\n      type=\"Oval\"\n      color=\"#00BFFF\"\n      height={80}\n      width={80}\n      timeout={3000}\n    />\n  );\n}\n","import PropTypes from 'prop-types';\n\nimport styles from './Section.module.css';\n\nexport default function Section({ children }) {\n  return <section className={styles.section}>{children}</section>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nimport styles from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast.warning('Enter your query');\n      onSubmit(query);\n      return;\n    }\n\n    onSubmit(query);\n  };\n\n  return (\n    <header className={styles.searchbar}>\n      <form className={styles.searchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.searchFormButton}>\n          <span className={styles.searchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={styles.searchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ largeImgURL, alt, onClose }) {\r\n  useEffect(() => {\r\n    function handleKeyDown(e) {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    }\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onClose]);\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={styles.overlay} onClick={handleBackdropClick}>\r\n      <div className={styles.modal}>\r\n        <img src={largeImgURL} alt={alt} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  largeImgURL: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport imagesApi from '../../services/images-api';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Button from '../Button/Button';\r\nimport LoaderSpinner from '../Loader/Loader';\r\nimport Section from '../Section/Section';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport Modal from '../Modal/Modal';\r\n\r\nexport default function GalleryView() {\r\n  const [query, setQuery] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageURL, setLargeImageURL] = useState('');\r\n  const [alt, setAlt] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (query === '') {\r\n      return;\r\n    }\r\n\r\n    const searchImages = () => {\r\n      const options = { query, currentPage };\r\n\r\n      setIsLoading(true);\r\n      imagesApi\r\n        .fetchImages(options)\r\n        .then(hits => {\r\n          setImages(prevImages => [...prevImages, ...hits]);\r\n\r\n          if (hits.length === 0) {\r\n            toast.error('Nothing was found');\r\n            return;\r\n          }\r\n        })\r\n        .catch(error => error)\r\n        .finally(() => setIsLoading(false));\r\n    };\r\n    searchImages();\r\n  }, [currentPage, query]);\r\n\r\n  const onLoadMore = () => {\r\n    setCurrentPage(currentPage + 1);\r\n    scrollPage();\r\n  };\r\n\r\n  const scrollPage = () => {\r\n    setTimeout(() => {\r\n      window.scrollBy({\r\n        top: document.documentElement.clientHeight - 160,\r\n        behavior: 'smooth',\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const onOpenModal = e => {\r\n    setLargeImageURL(e.target.dataset.source);\r\n    setAlt(e.target.alt);\r\n    toggleModal();\r\n  };\r\n\r\n  const handleFormSubmit = newQuery => {\r\n    if (newQuery !== query) {\r\n      setImages([]);\r\n      setQuery(newQuery);\r\n      setCurrentPage(1);\r\n    }\r\n  };\r\n\r\n  const shouldRenderLoadMoreBtn = images.length > 0 && !isLoading;\r\n\r\n  return (\r\n    <div>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      <ImageGallery images={images} onClick={onOpenModal} />\r\n      {showModal && (\r\n        <Modal largeImgURL={largeImageURL} alt={alt} onClose={toggleModal} />\r\n      )}\r\n      {isLoading && <LoaderSpinner />}\r\n      <Section>\r\n        {shouldRenderLoadMoreBtn && <Button onLoadMore={onLoadMore} />}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import { ToastContainer } from 'react-toastify';\n\nimport Container from './components/Container/Container';\nimport GalleryView from './components/GalleryView/GalleryView';\n\nexport default function App() {\n  return (\n    <Container>\n      <GalleryView />\n      <ToastContainer autoClose={3000} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}